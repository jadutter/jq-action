name: "GitHub-CI: development tests"

on:
  push:
    branches:
      - "develop"
  pull_request:
    branches:
      - "!release"
  # execute these tests on any branch that is not the 'release' branch,
  # as the 'release' branch should not have the 'tests' directory
jobs:
  test-action:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: validate tests exist
        uses: jadutter/jq-action@release
        id: valid-tests
        with:
          cmd: >
            if [ ! -d '/tests' ]; then
              echo "tests directory does not exist " >&2;
              exit 1
            fi;
            if [ ! -f '/tests/sample.json' ]; then
              echo "'/tests/sample.json' does not exist" >&2;
              exit 2
            fi;
            if [ ! -f '/tests/test_bash.sh' ]; then
              echo "'/tests/test_bash.sh' does not exist" >&2;
              exit 3
            fi;
            if [ ! -f '/tests/test_jq.jq' ]; then
              echo "'/tests/test_jq.jq' does not exist" >&2;
              exit 4
            fi;
            if [ ! -x '/tests/test_bash.sh' ]; then
              echo "'/tests/test_bash.sh' is not executable" >&2;
              exit 5
            fi;
            echo "tests are ready"

      - name: json file from repo
        uses: jadutter/jq-action@release
        id: test-4
        with:
          cmd: >
            jq -c 'keys' ./tests/sample.json

      - name: Check test-4
        run: >
          if [[ "$(echo -n "${{ steps.test-4.outputs.stdout }}" )" != "[\"foo\"]" ]]; then 
            echo "stdout:"
            echo "${{ steps.test-4.outputs.stdout }}"
            echo "stderr:"
            echo "${{ steps.test-4.outputs.stderr }}"
            echo "exit_code:"
            echo "${{ steps.test-4.outputs.exit_code }}"
            exit 1
          fi

      - name: bash script from repo
        uses: jadutter/jq-action@release
        id: test-5
        with:
          cmd: >
            ./tests/test_bash.sh

      - name: Check test-5
        run: >
          if [[ "${{ steps.test-5.outputs.stdout }}" != "[\"bar\"]" ]]; then 
            echo "stdout:"
            echo "${{ steps.test-5.outputs.stdout }}"
            echo "stderr:"
            echo "${{ steps.test-5.outputs.stderr }}"
            echo "exit_code:"
            echo "${{ steps.test-5.outputs.exit_code }}"
            exit 1
          fi

      - name: jq-module from repo
        uses: jadutter/jq-action@release
        id: test-6
        with:
          cmd: >
            jq -cn 'include "./tests/test_jq"; sample_function'

      - name: Check test-6
        run: >
          if [[ "${{ steps.test-6.outputs.stdout }}" != "[\"foo\",\"bar\"]" ]]; then 
            echo "stdout:"
            echo "${{ steps.test-6.outputs.stdout }}"
            echo "stderr:"
            echo "${{ steps.test-6.outputs.stderr }}"
            echo "exit_code:"
            echo "${{ steps.test-6.outputs.exit_code }}"
            exit 1
          fi
